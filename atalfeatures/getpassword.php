<?php
/*
Copyright (C) 2019  IBM Corporation 
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.
 
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details at 
http://www.gnu.org/licenses/gpl-3.0.html
*/

/* @package: core_project
 * @CreatedBy: Jothi (IBM)
 * @CreatedOn: 07-05-2018
 * @Description: get password page
*/

require_once('../config.php');
require_once($CFG->dirroot.'/lib/formslib.php');
require_login(null, false);
if (isguestuser()) {
    redirect($CFG->wwwroot);
}
require_once($CFG->libdir.'/filelib.php');
$userrole = get_atalrolenamebyid($USER->msn);
$PAGE->set_url('/atalfeatures/getpassword.php');
$show_form_status=false;
//Heading
$PAGE->set_context(context_user::instance($USER->id));
$PAGE->set_pagelayout('standard');
$strmessages = "Admin : Get the Password ";
$PAGE->set_title("{$SITE->shortname}: $strmessages");
$PAGE->set_heading("Admin : Get the Password");
echo $OUTPUT->header();
//$formobj = new AddNewCity();
class GetPassword extends moodleform {
    /**
    * The form definition
    */
    public function definition() {
        global $CFG, $USER, $OUTPUT,$DB;
		$mform = $this->_form; // Don't forget the underscore!
		$mform->addElement('text', 'email', 'Email Id', 'size="30",maxlength="50"');	
		$mform->addRule('email', get_string('required'), 'required', null, 'client');
		$this->add_action_buttons(false, 'Search');
    }
	function validation($data, $files) {
		global $DB,$USER;
		$errors = parent::validation($data, $files);
		if(!empty($data['email'])){
					$result = $DB->get_record('user',array('email'=>$data['email']),'id');
					if(!$result)
						$errors['email'] = "Email Id does not Exist!";
		}
		return $errors;
    }
}
$formobj = new GetPassword();
$password = $alert_box = '';
if ($formobj->is_cancelled()) {
} else if ($data = $formobj->get_data()) {
	$result = $DB->get_record('user',array('email'=>$data->email),'passraw');
	if($result)
		$password = $result->passraw;
	if($password)
	{
		$alert_box='<div class="alert alert-success">
					  <strong> Random Password Generated by the System : '.$password.'</strong><button class="close" type="button" data-dismiss="alert">×</button></a>
			</div>';
	}
	else
	{
		$alert_box='<div class="alert alert-danger">
					  <strong> Password Already Changed by the User . Cannot Disclose ! </strong><button class="close" type="button" data-dismiss="alert">×</button></a>
			</div>';
	}	
} 

echo $alert_box;
echo $content = $formobj->render();
echo $OUTPUT->footer();
?>



<script type="text/javascript">
require(['jquery'], function($) {
});
</script>

